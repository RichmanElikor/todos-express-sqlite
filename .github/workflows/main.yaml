name: Todo-app Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 
      - name: Set up Node.js
        uses: actions/setup-node@v3 
        with:
          node-version: '22'
      - name: Install dependencies and Test
        run: |
          npm install 
#         npm test

  Build_and_Deploy:
    needs : test # Ensure tests pass before building and deploying
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3
      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: Login to Amazon ECR 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: todo
          IMAGE_TAG: latest
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
      
      - name: Create Dockerrun.aws.json 
        run: | 
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "'$ECR_REGISTRY'/'$ECR_REPOSITORY':'$IMAGE_TAG'",
              "Update": "true"
              },
              "Ports": [
                {
                  "ContainerPort": "3000",
                  "HostPort": "80"
                }
              ]
            }' > Dockerrun.aws.json
            
      - name: Deploy to Elastic Beanstalk 
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          application_name: todo-app
          environment_name: todo-app-env
          version_label: ${{ github.sha }}
          region: us-east-1
          deployment_package: Dockerrun.aws.json
